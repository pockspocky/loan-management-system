---
alwaysApply: true
---

# GitHub MCP Tools Usage

ALWAYS use MCP GitHub tools when working with GitHub repositories, pull requests, issues, or any GitHub-related operations.

## Available MCP GitHub Tools
Use these tools instead of manual git commands or GitHub web interface:

### Repository Operations
- `mcp_github_search_repositories` - Search for repositories
- `mcp_github_get_repository` - Get repository details
- `mcp_github_create_repository` - Create new repositories
- `mcp_github_fork_repository` - Fork repositories

### Issues and Pull Requests
- `mcp_github_search_issues` - Search issues across repositories
- `mcp_github_list_issues` - List issues in a repository
- `mcp_github_get_issue` - Get specific issue details
- `mcp_github_create_issue` - Create new issues
- `mcp_github_update_issue` - Update existing issues
- `mcp_github_add_issue_comment` - Add comments to issues
- `mcp_github_get_issue_comments` - Get issue comments

### Pull Request Management
- `mcp_github_list_pull_requests` - List pull requests
- `mcp_github_get_pull_request` - Get PR details
- `mcp_github_create_pull_request` - Create new PRs
- `mcp_github_update_pull_request` - Update existing PRs
- `mcp_github_merge_pull_request` - Merge pull requests
- `mcp_github_get_pull_request_files` - Get changed files in PR
- `mcp_github_get_pull_request_comments` - Get PR comments
- `mcp_github_create_pull_request_review_comment` - Add code review comments

### File Operations
- `mcp_github_get_file_contents` - Get file contents from repository
- `mcp_github_create_or_update_file` - Create or update files
- `mcp_github_push_files` - Push multiple files in single commit

### Branch and Tag Management
- `mcp_github_list_branches` - List repository branches
- `mcp_github_create_branch` - Create new branches
- `mcp_github_list_tags` - List repository tags
- `mcp_github_get_tag` - Get tag details

### Code Search
- `mcp_github_search_code` - Search code across repositories
- `mcp_github_search_users` - Search GitHub users

## When to Use MCP Tools
- Creating or updating GitHub issues
- Managing pull requests and code reviews
- Searching repositories or code
- Reading file contents from GitHub
- Creating branches or managing repository structure
- Any GitHub API operations

## Benefits
- More reliable than manual git operations
- Consistent API responses
- Better error handling
- Integrated with Cursor's workflow
- Direct access to GitHub's full feature set
